name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: rusty_test
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        components: rustfmt, clippy
    
    - name: Cache cargo registry
      uses: actions/cache@v4
      with:
        path: ~/.cargo/registry
        key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
    
    - name: Cache cargo index
      uses: actions/cache@v4
      with:
        path: ~/.cargo/git
        key: ${{ runner.os }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}
    
    - name: Cache cargo build
      uses: actions/cache@v4
      with:
        path: target
        key: ${{ runner.os }}-cargo-build-target-${{ hashFiles('**/Cargo.lock') }}

    - name: Install MySQL client
      run: |
        sudo apt-get update
        sudo apt-get install -y mysql-client

    - name: Wait for MySQL to be ready
      run: |
        echo "Waiting for MySQL service to be ready..."
        for i in {1..60}; do
          if mysqladmin ping -h 127.0.0.1 -P 3306 -u root -ppassword --silent; then
            echo "MySQL is ready!"
            break
          fi
          if [ $i -eq 60 ]; then
            echo "MySQL failed to start after 2 minutes"
            exit 1
          fi
          echo "Attempt $i: Waiting for MySQL..."
          sleep 2
        done

    - name: Initialize database schema
      run: |
        mysql -h 127.0.0.1 -P 3306 -u root -ppassword rusty_test < platform/images/mysql/schema.sql
        
    - name: Seed test data
      run: |
        mysql -h 127.0.0.1 -P 3306 -u root -ppassword rusty_test -e "INSERT INTO users (id, name, email) VALUES (1, 'Test User', 'test@example.com');"

    - name: Check formatting
      run: cargo fmt -- --check

    - name: Run clippy
      run: cargo clippy -- -D warnings

    - name: Build
      run: cargo build --verbose

    - name: Run tests
      run: cargo test --verbose
      env:
        DATABASE_URL: mysql://root:password@localhost:3306/rusty_test
        MYSQL_HOST: localhost
        MYSQL_USER: root
        MYSQL_PASSWORD: password
        MYSQL_DATABASE: rusty_test
